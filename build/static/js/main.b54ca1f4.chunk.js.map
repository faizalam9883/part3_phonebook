{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","components/Notification.js","components/Error.js","services/personBackend.js","App.js","index.js"],"names":["Persons","person","onClick","name","number","Filter","value","onChange","PersonForm","props","onSubmit","newName","handleName","newNumber","handleNumber","type","Notification","msg","className","Error","baseurl","personServices","getAll","axios","get","then","response","data","create","obj","post","deleteID","id","delete","update","put","App","useState","persons","setPersons","setNewName","setNewNumber","inputName","setInputName","setMsg","error","setError","useEffect","initialPersons","arr","e","target","preventDefault","i","forEach","window","confirm","newObj","returnedPerson","map","setTimeout","catch","filter","concat","console","log","toLowerCase","includes","find","p","deletePerson","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.b54ca1f4.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Persons = ({ person, onClick }) => {\r\n\treturn (\r\n\t\t<li key={person.name}>\r\n\t\t\t{person.name} {person.number}\r\n\t\t\t{\"  \"}\r\n\t\t\t<button onClick={onClick}>delete</button>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default Persons\r\n","import React from \"react\"\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\tfilter shown with <input value={value} onChange={onChange} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Filter\r\n","import React from \"react\"\r\n\r\nconst PersonForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.onSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\tname:{\" \"}\r\n\t\t\t\t<input value={props.newName} onChange={props.handleName} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tnumber:{\" \"}\r\n\t\t\t\t<input value={props.newNumber} onChange={props.handleNumber} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default PersonForm\r\n","const Notification = ({ msg }) => {\r\n\tif (msg === null) {\r\n\t\treturn null\r\n\t}\r\n\treturn <div className=\"message\">{msg}</div>\r\n}\r\n\r\nexport default Notification\r\n","const Error = ({ msg }) => {\r\n\tif (msg === null) {\r\n\t\treturn null\r\n\t}\r\n\treturn <div className=\"error\">{msg}</div>\r\n}\r\n\r\nexport default Error\r\n","import axios from \"axios\"\r\n\r\nconst baseurl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseurl)\r\n\treturn request.then((response) => response.data)\r\n}\r\n\r\nconst create = (obj) => {\r\n\tconst request = axios.post(baseurl, obj)\r\n\treturn request.then((response) => response.data)\r\n}\r\n\r\nconst deleteID = (id) => {\r\n\treturn axios.delete(`${baseurl}/${id}`)\r\n}\r\n\r\nconst update = (id, obj) => {\r\n\tconst request = axios.put(`${baseurl}/${id}`, obj)\r\n\treturn request.then((response) => response.data)\r\n}\r\n\r\nconst personServices = {\r\n\tgetAll,\r\n\tcreate,\r\n\tdeleteID,\r\n\tupdate,\r\n}\r\n\r\nexport default personServices\r\n","import React, { useState, useEffect } from \"react\"\r\nimport Persons from \"./components/Persons\"\r\nimport Filter from \"./components/Filter\"\r\nimport PersonForm from \"./components/PersonForm\"\r\nimport Notification from \"./components/Notification\"\r\nimport Error from \"./components/Error\"\r\nimport personServices from \"./services/personBackend\"\r\nimport \"./index.css\"\r\n\r\nconst App = () => {\r\n\tconst [persons, setPersons] = useState([])\r\n\tconst [newName, setNewName] = useState(\"\")\r\n\tconst [newNumber, setNewNumber] = useState(\"\")\r\n\tconst [inputName, setInputName] = useState(\"\") // input of filtered names\r\n\tconst [msg, setMsg] = useState(null)\r\n\tconst [error, setError] = useState(null)\r\n\r\n\t// fetch data from the db.json file and assign it to persons state\r\n\tuseEffect(() => {\r\n\t\tpersonServices\r\n\t\t\t.getAll()\r\n\t\t\t.then((initialPersons) => setPersons(initialPersons))\r\n\t}, [])\r\n\r\n\t// add person to persons state\r\n\tconst addPerson = (e) => {\r\n\t\te.preventDefault()\r\n\t\t// this checks whether name is already in persons array\r\n\t\tlet i = 0,\r\n\t\t\tid = 0\r\n\t\tpersons.forEach((person) => {\r\n\t\t\tif (person.name === newName || !newName) {\r\n\t\t\t\ti++\r\n\t\t\t\tid = person.id\r\n\t\t\t}\r\n\t\t})\r\n\t\tif (i > 0) {\r\n\t\t\tif (\r\n\t\t\t\twindow.confirm(\r\n\t\t\t\t\t`${newName} is already added to phonebook, replace the old number with the new one?`\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\t// update the person number\r\n\t\t\t\tconst newObj = { name: newName, number: newNumber }\r\n\t\t\t\tpersonServices\r\n\t\t\t\t\t.update(id, newObj)\r\n\t\t\t\t\t.then((returnedPerson) => {\r\n\t\t\t\t\t\tsetPersons(\r\n\t\t\t\t\t\t\tpersons.map((person) =>\r\n\t\t\t\t\t\t\t\tperson.id !== id ? person : returnedPerson\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tsetMsg(`Updated ${returnedPerson.name}`)\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetMsg(null)\r\n\t\t\t\t\t\t}, 3500)\r\n\t\t\t\t\t\tsetNewName(\"\")\r\n\t\t\t\t\t\tsetNewNumber(\"\")\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tsetError(\r\n\t\t\t\t\t\t\t`Information of ${newObj.name} has already been removed from server`\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tsetError(null)\r\n\t\t\t\t\t\t}, 3500)\r\n\t\t\t\t\t\tsetNewName(\"\")\r\n\t\t\t\t\t\tsetNewNumber(\"\")\r\n\t\t\t\t\t\tsetPersons(persons.filter((person) => person.id !== id))\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tconst obj = {\r\n\t\t\t\tname: newName,\r\n\t\t\t\tnumber: newNumber,\r\n\t\t\t}\r\n\t\t\t// add persons to backend server\r\n\t\t\tpersonServices\r\n\t\t\t\t.create(obj)\r\n\t\t\t\t.then((returnedPerson) => {\r\n\t\t\t\t\tsetPersons(persons.concat(returnedPerson))\r\n\t\t\t\t\tsetMsg(`Added ${returnedPerson.name}`)\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetMsg(null)\r\n\t\t\t\t\t}, 3500)\r\n\t\t\t\t\tsetNewName(\"\")\r\n\t\t\t\t\tsetNewNumber(\"\")\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => console.log(error.response.data))\r\n\t\t}\r\n\t}\r\n\r\n\t// logic for filtering names by input value\r\n\tconst filterNames = (arr) =>\r\n\t\tarr.filter((person) =>\r\n\t\t\tperson.name.toLowerCase().includes(inputName.toLowerCase())\r\n\t\t)\r\n\r\n\tconst handleName = (e) => {\r\n\t\tsetNewName(e.target.value)\r\n\t}\r\n\r\n\tconst handleNumber = (e) => {\r\n\t\tsetNewNumber(e.target.value)\r\n\t}\r\n\r\n\tconst handleFilter = (e) => {\r\n\t\tsetInputName(e.target.value)\r\n\t}\r\n\r\n\t// deleting person from backend server\r\n\tconst deletePerson = (id) => {\r\n\t\tconst person = persons.find((p) => p.id === id)\r\n\t\tif (window.confirm(`Delete ${person.name} ?`)) {\r\n\t\t\tpersonServices.deleteID(id).then(() => {\r\n\t\t\t\tsetPersons(persons.filter((person) => person.id !== id))\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Phonebook</h2>\r\n\t\t\t<Notification msg={msg} />\r\n\t\t\t<Error msg={error} />\r\n\t\t\t<Filter value={inputName} onChange={handleFilter} />\r\n\t\t\t<h2>Add a new</h2>\r\n\t\t\t<PersonForm\r\n\t\t\t\tonSubmit={addPerson}\r\n\t\t\t\tnewName={newName}\r\n\t\t\t\thandleName={handleName}\r\n\t\t\t\tnewNumber={newNumber}\r\n\t\t\t\thandleNumber={handleNumber}\r\n\t\t\t/>\r\n\t\t\t<h2>Numbers</h2>\r\n\t\t\t<ul>\r\n\t\t\t\t{filterNames(persons).map((person) => (\r\n\t\t\t\t\t<Persons\r\n\t\t\t\t\t\tkey={person.id}\r\n\t\t\t\t\t\tperson={person}\r\n\t\t\t\t\t\tonClick={() => deletePerson(person.id)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"))\r\n"],"sourceRoot":""}